DROP TABLE IF EXISTS NETWORK;
CREATE TABLE NETWORK (
    ID SERIAL PRIMARY KEY,
    NAME TEXT NOT NULL,
     DRAFT BOOLEAN,
     DRAFT_CONFIG TEXT,
    UNIQUE (NAME)
);

DROP TABLE IF EXISTS COLLECTOR;
CREATE TABLE COLLECTOR (
  ID SERIAL PRIMARY KEY,
  NAME TEXT NOT NULL,
  CONSOLIDATION_TYPE TEXT,
  PARAMS TEXT,
  SOURCE_COLLECTOR TEXT,
  TYPE VARCHAR(255),
  TIMEOUT INTEGER,
  UNIQUE (NAME)
);

DROP TABLE IF EXISTS AGENTS;
CREATE TABLE AGENTS (
  ID SERIAL PRIMARY KEY,
  NAME TEXT NOT NULL,
  PARAMS TEXT,
  TYPE VARCHAR(255),
  UPDATE_DATE DATE NOT NULL DEFAULT CURRENT_DATE,
  UNIQUE (NAME)
);

DROP TABLE IF EXISTS AUTH_GROUP;
CREATE TABLE AUTH_GROUP (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    LOGIN_TYPE VARCHAR(255),
    USERNAME VARCHAR(255),
    PASSWORD BYTEA,
    CONFIRM_PASSWORD BYTEA,
    UPDATE_DATE DATE NOT NULL DEFAULT CURRENT_DATE,
    UNIQUE (NAME)
);

DROP TABLE IF EXISTS SNMP_GROUP;
CREATE TABLE SNMP_GROUP (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
    SNMP_TYPE VARCHAR(255),
    USERNAME VARCHAR(255),
    RO_COMMUNITY VARCHAR(255),
    SECURITY_LEVEL VARCHAR(255),
    AUTHENTICATION_PROTOCOL VARCHAR(255),
    AUTHENTICATION_PASSWORD BYTEA,
    ENCRYPTION_PROTOCOL VARCHAR(255),
    ENCRYPTION_PASSWORD BYTEA,
    UPDATE_DATE DATE NOT NULL DEFAULT CURRENT_DATE,
    UNIQUE (NAME)
);

DROP TABLE IF EXISTS NODE_PROFILE;
CREATE TABLE NODE_PROFILE (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
     DEFAULT_AUTH_GROUP VARCHAR(255),
     DEFAULT_SNMP_GROUP VARCHAR(255),
     USE_NODE_LIST_AS_INCLUDE_FILTER BOOLEAN,
     UPDATE_DATE DATE NOT NULL DEFAULT CURRENT_DATE,
    UNIQUE (NAME)
);

DROP TABLE IF EXISTS NODE_LIST;
CREATE TABLE NODE_LIST (
    ID SERIAL PRIMARY KEY,
    NODE_IP VARCHAR(255) NOT NULL,
    NODE_MANAGEMENT_IP VARCHAR(255)
);

DROP TABLE IF EXISTS NODE_FILTER;
CREATE TABLE NODE_FILTER (
    ID SERIAL PRIMARY KEY,
    TYPE VARCHAR(255) NOT NULL,
    CONDITION VARCHAR(255),
    VALUE VARCHAR(255),
    ENABLED BOOLEAN
);

DROP TABLE IF EXISTS IMPORT_HISTORY;
CREATE TABLE IMPORT_HISTORY (
  ID SERIAL PRIMARY KEY,
  TYPE VARCHAR(255),
  STATUS VARCHAR(255),
  FAILURE_REPORT TEXT,
  START_TIME BIGINT,
  END_TIME BIGINT
);

DROP TABLE IF EXISTS NODE_PROFILE_REF;
CREATE TABLE NODE_PROFILE_REF (
    ID SERIAL PRIMARY KEY,
    NODE_PROFILE_ID INTEGER REFERENCES NODE_PROFILE(ID),
    NETWORK INTEGER REFERENCES NETWORK(ID)
);

DROP TABLE IF EXISTS COLLECTOR_REF;
CREATE TABLE COLLECTOR_REF (
    ID SERIAL PRIMARY KEY,
    COLLECTOR_ID INTEGER REFERENCES COLLECTOR(ID),
    NETWORK INTEGER REFERENCES NETWORK(ID)
);

DROP TABLE IF EXISTS AGENT_REF;
CREATE TABLE AGENT_REF (
    ID SERIAL PRIMARY KEY,
    AGENT_ID INTEGER REFERENCES AGENTS(ID),
    COLLECTOR INTEGER REFERENCES COLLECTOR(ID)
);

DROP TABLE IF EXISTS CHILD_COLLECTOR_REF;
CREATE TABLE CHILD_COLLECTOR_REF (
    ID SERIAL PRIMARY KEY,
    CHILD_COLLECTOR_ID INTEGER REFERENCES COLLECTOR(ID),
    COLLECTOR INTEGER REFERENCES COLLECTOR(ID)
);

DROP TABLE IF EXISTS NODE_FILTER_REF;
CREATE TABLE NODE_FILTER_REF (
    ID SERIAL PRIMARY KEY,
    NODE_FILTER_ID INTEGER REFERENCES NODE_FILTER(ID),
    NODE_PROFILE INTEGER REFERENCES NODE_PROFILE(ID)
);

DROP TABLE IF EXISTS NODE_LIST_REF;
CREATE TABLE NODE_LIST_REF (
    ID SERIAL PRIMARY KEY,
    NODE_LIST_ID INTEGER REFERENCES NODE_LIST(ID),
    NODE_PROFILE INTEGER REFERENCES NODE_PROFILE(ID)
);

DROP TABLE IF EXISTS AUTH_GROUP_REF;
CREATE TABLE AUTH_GROUP_REF (
    ID SERIAL PRIMARY KEY,
    AUTH_GROUP_ID INTEGER REFERENCES AUTH_GROUP(ID),
    NODE_LIST INTEGER REFERENCES NODE_LIST(ID)
);

DROP TABLE IF EXISTS SNMP_GROUP_REF;
CREATE TABLE SNMP_GROUP_REF (
    ID SERIAL PRIMARY KEY,
    SNMP_GROUP_ID INTEGER REFERENCES SNMP_GROUP(ID),
    NODE_LIST INTEGER REFERENCES NODE_LIST(ID)
);


