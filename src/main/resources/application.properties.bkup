server.port=8080

# Common
applicationId=collection-service
applicationName=Collection Service

spring.application.name=Crosswork Planning Collection Service
logging.level.root=INFO

# Server Graceful Shutdown
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=1m

# hikari pool logging
logging.level.com.zaxxer.hikari=DEBUG
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG

## DB configs


spring.datasource.url=jdbc:postgresql://robot-postgres:5432/cpcollection
spring.datasource.username= postgres
spring.datasource.password= postgres
spring.datasource.platform= postgres
spring.datasource.driverClassName= org.postgresql.Driver
spring.sql.init.mode=always
spring.datasource.schema= classpath:schema.sql
spring.datasource.hikari.schema=collectionservice

# server logging
logging.level.sql=debug
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# server logging
logging.level.org.springframework.web=DEBUG
spring.mvc.log-request-details=true
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG

# work flow manager service properties
app.workflow.baseUrl = http://workflow-manager:8080/
app.workflow.jobs = /api/v1/workflows/
app.workflow.network.status = /api/v1/status/networks/
app.workflow.job.status = /api/v1/status/workflows/
app.workflow.taskHistory = /api/v1//status/workflows/$ID/tasks/history
app.workflow.network.resync = /api/v1/networks/resync
app.workflow.job.stats = /api/v1/status/workflows/stats
app.workflow.network.delete = /api/v1/networks/
app.workflow.collector.delete = /api/v1/networks/$NETWORK_ID/collectors/

app.workflow.pause = /api/v1/workflows/$ID/pause
app.workflow.resume = /api/v1/workflows/$ID/resume
app.workflow.execute = /api/v1/workflows/$ID/execute
app.workflow.abort = /api/v1/workflows/executions/$ID/abort
app.workflow.agent.job = /api/v1/agents/

#Srpce service properties
app.srpce.baseUrl = http://srpce-collection-service:8080
app.srpce.status = /api/v1/wae/agent/xtc-agents/$ID/status
app.srpce.all.status = /api/v1/wae/agent/xtc-agents/status
app.srpce.bgpls.stop = /api/v1/wae/xtc-collectors/bgpls/$ID/stop-collection
app.srpce.pcep.stop = /api/v1/wae/xtc-collectors/lsp-pcep/$ID/stop-collection

#Netflow service properties
app.netflow.baseUrl =http://netflow-service:8080
app.netflow.status = /agent/status

#Traffic poller service properties
app.traffic.poller.baseUrl =http://traffic-collection-service:8080
app.traffic.poller.status = /trafficpoller/getcpstatus?id=

#Aggregator service properties
app.aggregator.baseUrl =http://aggregator:8080
app.aggregator.script.properties.validator = /api/v1/aggregation/configuration/capabilities/collectors/external-scripts/validation
app.aggregator.script.properties = /api/v1/aggregation/configuration/capabilities/collectors/external-scripts
app.aggregator.config.get = /api/v1/aggregation/configuration/capabilities/text
app.aggregator.config.update = /api/v1/aggregation/configuration/capabilities/file
app.aggregator.config.reset = /api/v1/aggregation/configuration/capabilities/reset
app.aggregator.aging = /api/v1/general/configuration/ageing/flags

#mount properties
mount.directory=/mnt/collector/
mount.network.profile.directory=configs/
mount.network.directory=network/
mount.user.upload.directory=/user-upload/
mount.data.directory=data/
mount.agents.directory=agents/
mount.agents.srpce.directory=xtc-agent/
mount.network.folder.suffix=_NETWORK

#kafka properties
kafkaUrl=robot-kafka:9092
kafkaPollInterval=1000
maintenanceModeKafkaTopic=robot.orchestrator.system.json

resource.network.profile.path=net_access.txt

spring.servlet.multipart.max-file-size=1024MB
spring.servlet.multipart.max-request-size=1024MB
